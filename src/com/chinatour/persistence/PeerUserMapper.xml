<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinatour.persistence.PeerUserMapper">
	
    <sql id="Base_Column_List">
        PeerUserId,PeerUserName,Password,PeerId,CreateTime,UserId,IsAvailable,Level,BrandMange,CurrencyTypeId,LogoAddress
    </sql>
    
	<resultMap type="PeerUser" id="BaseResultMap">
	    <result column="PeerUserId" property="peerUserId" jdbcType="VARCHAR" />
		<result column="PeerUserName" property="peerUserName" jdbcType="VARCHAR" />
		<result column="Password" property="password" jdbcType="VARCHAR" />
		<result column="PeerId" property="peerId" jdbcType="VARCHAR" />
		<!-- <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" /> -->
		<result column="userId" property="userId" jdbcType="VARCHAR" />
		<result column="IsAvailable" property="isAvailable" jdbcType="INTEGER" />
		<result column="Level" property="level" jdbcType="INTEGER" />
		<result column="BrandMange" property="brandMange" jdbcType="VARCHAR" />
		<result column="CurrencyTypeId" property="currencyTypeId" jdbcType="VARCHAR" />
		<result column="LogoAddress" property="logoAddress" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="findAll" resultMap="BaseResultMap">
		SELECT 
			<include refid="Base_Column_List"/>
	    FROM
	    	PeerUser
	    WHERE 
	    	IsAvailable=0
	</select>
	
	<update id="update" parameterType="PeerUser">
		UPDATE peeruser
			<set>
			   <if test="peerUserId != null">
                   peerUserId= #{peerUserId} ,
                </if>
                <if test="peerUserName != null">
                   peerUserName= #{peerUserName} ,
                </if>
                <if test="password != null">
                    password=#{password} ,
                </if>
                <if test="peerId != null">
                    peerId=#{peerId},
                </if>
                <if test="userId != null">
                    userId=#{userId},
                </if>
                <if test="isAvailable != null">
                    isAvailable=#{isAvailable},
                </if>
                 <if test="level != null">
                    level=#{level},
                </if>
                 <if test="brandMange != null">
                   brandMange= #{brandMange} ,
                </if>
                <if test="currencyTypeId != null">
                   currencyTypeId= #{currencyTypeId} ,
                </if>
                <if test="logoAddress != null">
                   LogoAddress= #{logoAddress} ,
                </if>
                
			</set>
		WHERE 
            peerUserId=#{peerUserId}
	</update> 
	
	
	 <insert id="save" parameterType="PeerUser">
	     INSERT INTO peeruser
	     	<trim prefix="(" suffix=")" suffixOverrides=",">
	     	   <if test="peerUserId != null">
                    peerUserId ,
                </if>
                <if test="peerUserName != null">
                    peerUserName ,
                </if>
                <if test="password != null">
                    password ,
                </if>
                <if test="peerId != null">
                    peerId ,
                </if>
                <if test="userId != null">
                    userId ,
                </if>
                <if test="isAvailable != null">
                    isAvailable,
                </if>
                <if test="level != null">
                    level,
                </if>
                <if test="brandMange != null">
                    brandMange,
                </if>
                <if test="currencyTypeId != null">
                    currencyTypeId,
                </if>
                <if test="logoAddress != null">
                    logoAddress
                </if>
	     	</trim> 
	     	<trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="peerUserId != null">
                    #{peerUserId,jdbcType=VARCHAR} ,
                </if>
                <if test="peerUserName != null">
                    #{peerUserName,jdbcType=VARCHAR} ,
                </if>
                <if test="password != null">
                    #{password,jdbcType=VARCHAR} ,
                </if>
                <if test="peerId != null">
                    #{peerId,jdbcType=VARCHAR},
                </if>
                <if test="userId != null">
                    #{userId,jdbcType=VARCHAR},
                </if>
                <if test="isAvailable != null">
                    #{isAvailable,jdbcType=INTEGER},
                </if>
                <if test="level != null">
                    #{level,jdbcType=INTEGER},
                </if>
                 <if test="brandMange != null">
                    #{brandMange,jdbcType=VARCHAR},
                </if>
                <if test="currencyTypeId != null">
                    #{currencyTypeId,jdbcType=VARCHAR},
                </if>
                <if test="logoAddress != null">
                    #{logoAddress,jdbcType=VARCHAR}
                </if>
	     	</trim>
	</insert>

	 
	
	<select id="findById" resultMap="BaseResultMap" parameterType="String">
		SELECT 
			<include refid="Base_Column_List"/>
	    FROM
	    	PeerUser
	    WHERE 
	    	PeerUserId=#{peerUserId}
	</select>
	
	<select id="findByName" resultMap="BaseResultMap" parameterType="String">
		SELECT 
			<include refid="Base_Column_List"/>
	    FROM
	    	PeerUser
	    WHERE 
	    	PeerUserName=#{peerUserName}
	</select>
	
	<select id="find" resultMap="BaseResultMap" parameterType="PeerUser">
		SELECT 
			<include refid="Base_Column_List"/>
	    FROM
	    	PeerUser
	    <where>
            <trim suffixOverrides="AND">
                <if test="peerUserId != null">
                    PeerUserId = #{peerUserId} AND
                </if>
                <if test="peerUserName != null">
                    PeerUserName = #{peerUserName} AND
                </if>
                <if test="password != null">
                    Password = #{password} AND
                </if>
                <if test="peerId !=null">
	                PeerId = #{peerId} AND
                </if>
                IsAvailable=0
            </trim>
        </where>
	</select>
	
	<sql id="findForPage_sql">
        select
        	<include refid="Base_Column_List"/>
        from peeruser
        <where>
            <trim suffixOverrides="AND">
                <if test="record.peerUserId != null">
                    PeerUserId = #{record.peerUserId} AND
                </if>
                <if test="record.peerUserName != null">
                    PeerUserName LIKE CONCAT('%','${record.peerUserName}','%') AND
                </if>
                <if test="record.peerId != null">
                    PeerId = #{record.peerId} AND
                </if>
	                 IsAvailable = 0 
            </trim>
        </where>
    </sql>
	 <select id="findForPage" resultMap="BaseResultMap">
        <include refid="Pager.paginationStart"/>
        <include refid="findForPage_sql"/>
        <include refid="Pager.paginationEnd"/>
    </select>
    
    <select id="findForPageCount" resultType="int">
        <include refid="Pager.countStart"/>
        <include refid="findForPage_sql"/>
        <include refid="Pager.countEnd"/>
    </select>
</mapper>